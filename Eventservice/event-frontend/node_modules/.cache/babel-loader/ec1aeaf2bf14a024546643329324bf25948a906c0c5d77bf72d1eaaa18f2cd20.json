{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WB\\\\OneDrive\\\\Desktop\\\\Eventservice\\\\event-frontend\\\\src\\\\components\\\\Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/events\") // Fetch from backend API\n    .then(response => response.json()).then(data => setEvents(data)).catch(error => console.error(\"Error fetching events:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: event.event_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), \" - \", event.date, \" at \", event.time]\n      }, event._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Events, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Events","_s","events","setEvents","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","event_name","date","time","_id","_c","$RefreshReg$"],"sources":["C:/Users/WB/OneDrive/Desktop/Eventservice/event-frontend/src/components/Events.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Events = () => {\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/api/events\") // Fetch from backend API\r\n            .then((response) => response.json())\r\n            .then((data) => setEvents(data))\r\n            .catch((error) => console.error(\"Error fetching events:\", error));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Event List</h2>\r\n            <ul>\r\n                {events.map((event) => (\r\n                    <li key={event._id}>\r\n                        <strong>{event.event_name}</strong> - {event.date} at {event.time}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Events;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,kCAAkC,CAAC,CAAC;IAAA,CACrCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAAa,QAAA,EACKV,MAAM,CAACe,GAAG,CAAEC,KAAK,iBACdnB,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,EAASM,KAAK,CAACC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACE,KAAK,CAACE,IAAI,EAAC,MAAI,EAACF,KAAK,CAACG,IAAI;MAAA,GAD5DH,KAAK,CAACI,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACf,EAAA,CAtBID,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAwBZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}